import numpy as np
import pandas as pd
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the Iris dataset using scikit-learn
iris = load_iris(as_frame=True)

# Create a pandas DataFrame for the feature and target variables
data = iris.data
target = iris.target
df = pd.concat([data, target], axis=1)

# Select one feature (e.g., 'sepal length (cm)') as X and the target variable as y
X = df['sepal length (cm)'].values.reshape(-1, 1)
y = df['target']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Linear Regression model
model = LinearRegression()

# Fit the model to the training data
model.fit(X_train, y_train)

# Make predictions on the test data
y_pred = model.predict(X_test)

# Calculate and print the mean squared error
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse}")

# Calculate and print the coefficient of determination (R-squared)
r2 = r2_score(y_test, y_pred)
print(f"R-squared: {r2}")
